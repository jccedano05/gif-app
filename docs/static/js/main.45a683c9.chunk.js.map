{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","propType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAwB5C,OACI,sBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,EAAc,CAACE,IACfC,EAAc,MASlB,SACI,uBACIM,KAAK,OACLC,MAAQR,EACRS,SAxBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,aAgC/BX,EAAYc,SAAW,CACnBb,cAAec,YAAUC,KAAKC,Y,kCCvCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OACI,sBAAKc,UAAU,yCAAf,cACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEZjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAW,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAInB,CAACpB,IAEGqB,EDbwBK,CAAc1B,GAAjCa,EAJyB,EAI9BN,KAAaa,EAJiB,EAIjBA,QAOpB,OACI,qCACA,qBAAIJ,UAAU,oCAAd,cAAqDhB,KAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEX,qBAAKA,UAAU,YAAf,SAIWH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEpBrBgB,EAAe,WAAO,IAAD,EAGM5C,mBAAS,CAAC,YAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAQ9B,OACI,qCACI,yCACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEQ8C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAYA,GADLA,Y,MCpBnC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.45a683c9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n\r\n    const handleInputChange = (e) => { // recibo el evento\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {  \r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories([inputValue]); //podemos obtener por medio de un callback el estado anterior de la funcion setCategories\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nAddCategory.propType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n//---- Obtenemos los gif del API ----\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=srzSq8ZKJOgIY4RAGLvAHSebDS2IG1g5`; //encodeURI remplaza espacios por + o %\r\n\r\n    const resp = await fetch(url); //buscamos en la api lo que tenemos en el URL\r\n    \r\n    const {data} = await resp.json(); //convertimos la respuesta en Json y lo destructuramos\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url  //con el signo ? decimos que si viene las imagenes las utilice\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\"> {/*ClassName es el Class pero de React*/}\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // srzSq8ZKJOgIY4RAGLvAHSebDS2IG1g5  - API de mi cuenta GIPHY\r\n\r\n    const {data:images, loading} = useFetchGifs( category);\r\n\r\n \r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n         <div className=\"card-grid\">\r\n           \r\n        \r\n                {\r\n                    images.map( img => (\r\n                      <GifGridItem \r\n                        key= {img.id}\r\n                        { ...img }  //con esto mandamos las propiedades como independientes\r\n                    />\r\n                    ))\r\n                }\r\n            \r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n         getGifs(category).then(imgs => {\r\n             setState({\r\n                 data: imgs,\r\n                 loading: false\r\n             })\r\n         })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n \r\n    const [categories, setCategories] = useState(['welcome'])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif App</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                 { \r\n                    categories.map( category => (\r\n                        \r\n                        <GifGrid \r\n                            key= { category }\r\n                            category= { category } \r\n                        />\r\n                    ))\r\n                 }\r\n            </ol>\r\n            \r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}